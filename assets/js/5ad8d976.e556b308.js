"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[9067],{9114:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>h});var s=i(2037),n=i(4848),a=i(8453);const r={slug:"lips-history",title:"LIPS Scheme History",authors:"jcubic",image:"/img/lips-history.png",tags:["lips","scheme","history"]},o=void 0,l={authorsImageUrls:[void 0]},h=[{value:"What is Scheme?",id:"what-is-scheme",level:2},{value:"What is LIPS?",id:"what-is-lips",level:2},{value:"History of LIPS",id:"history-of-lips",level:2},{value:"Future of LIPS",id:"future-of-lips",level:2}];function c(e){const t={a:"a",h2:"h2",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"This is the first article on LIPS blog. In this article I will write about the history of LIPS\nScheme interpreter."}),"\n",(0,n.jsx)(t.h2,{id:"what-is-scheme",children:"What is Scheme?"}),"\n",(0,n.jsxs)(t.p,{children:["Scheme is a dialect of the Lisp. The second oldest programming language still in use (after\nFortran).  Lisp and Scheme have specific syntax with prefix notation and where everything is a list\n(at least historically).  It's also ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Homoiconicity",children:"Homoiconic"}),", which\nmeans that code and data have the same represantion. This allows to write programs that modify the\ncode like it was data."]}),"\n",(0,n.jsx)(t.h2,{id:"what-is-lips",children:"What is LIPS?"}),"\n",(0,n.jsxs)(t.p,{children:["LIPS name is a recursive ancronym which stands for ",(0,n.jsx)(t.strong,{children:'"LIPS Is Pretty Simple"'}),". LIPS Scheme is\nimplementation of Scheme programming language in JavaScript. It adds a lot of stuff on top of Scheme\nto make it more powerful and easier to interact with JavaScript."]}),"\n",(0,n.jsx)(t.h2,{id:"history-of-lips",children:"History of LIPS"}),"\n",(0,n.jsxs)(t.p,{children:["It all started in February 2018 when I've written the first version of Lisp interpreter. You can\nstill see the code on ",(0,n.jsx)(t.a,{href:"https://codepen.io/jcubic/pen/gvvzdp",children:"CodePen"}),". Then I moved the\n",(0,n.jsx)(t.a,{href:"https://github.com/jcubic/lips",children:"development to GitHub"})," and named the project LIPS.  The first release\n(version 0.2.0) is marked as Mar 2018."]}),"\n",(0,n.jsxs)(t.p,{children:["At the beginning it was Lisp based on Scheme, but at one point after version\n",(0,n.jsx)(t.a,{href:"https://github.com/jcubic/lips/releases/tag/0.20.1",children:"0.20.1 dated as Jul 1, 2020"}),", I've started\nadding features on devel branch and decided that I want a full Scheme implementation. But it turns out\nthat there were way too many breaking changes to release the next version. So I decided that I will\nrelease it as beta-1.0. Since then, LIPS keep introducing new Beta versions. You can see the\n",(0,n.jsx)(t.a,{href:"https://github.com/jcubic/lips/releases",children:"latest release on GitHub"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"future-of-lips",children:"Future of LIPS"}),"\n",(0,n.jsxs)(t.p,{children:["For the future plans I want in final version 1.0 are implementation of continutations and Tail Calls\n(",(0,n.jsx)("abbr",{title:"Tail Call Optimization",children:"TCO"}),") and to be compatible (more or less) with\n",(0,n.jsxs)(t.a,{href:"https://standards.scheme.org/",children:["R",(0,n.jsx)("sup",{children:"7"}),"RS specification"]}),". To see the progress, you can check\n",(0,n.jsx)(t.a,{href:"https://github.com/jcubic/lips/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0",children:"1.0 Milestone on GitHub"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var s=i(6540);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}},2037:e=>{e.exports=JSON.parse('{"permalink":"/blog/lips-history","editUrl":"https://github.com/LIPS-scheme/lips/tree/master/docs/blog/2024-03-03-lips-history.md","source":"@site/blog/2024-03-03-lips-history.md","title":"LIPS Scheme History","description":"This is the first article on LIPS blog. In this article I will write about the history of LIPS","date":"2024-03-03T00:00:00.000Z","tags":[{"inline":true,"label":"lips","permalink":"/blog/tags/lips"},{"inline":true,"label":"scheme","permalink":"/blog/tags/scheme"},{"inline":true,"label":"history","permalink":"/blog/tags/history"}],"readingTime":1.55,"hasTruncateMarker":true,"authors":[{"name":"Jakub T. Jankiewicz","title":"LIPS maintainer","url":"https://jakub.jankiewicz.org/","imageURL":"https://github.com/jcubic.png","key":"jcubic","page":null}],"frontMatter":{"slug":"lips-history","title":"LIPS Scheme History","authors":"jcubic","image":"/img/lips-history.png","tags":["lips","scheme","history"]},"unlisted":false,"prevItem":{"title":"Scheme Regex literals in Emacs","permalink":"/blog/emacs-scheme-regex"}}')}}]);